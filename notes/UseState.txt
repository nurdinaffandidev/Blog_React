### âœ… What is `useState` in React?

`useState` is a React Hook that lets you add state (i.e. dynamic, changeable data) to **functional components.

> In simple terms: it allows your component to remember values and update the UI when they change.

---

## ðŸ”§ Syntax

```js
const [state, setState] = useState(initialValue);
```

| Part           | Description                           |
| -------------- | ------------------------------------- |
| `state`        | The current value                     |
| `setState`     | A function to update that value       |
| `initialValue` | The starting value (e.g., 0, "", \[]) |

---

## ðŸ§  Example: Counter

```jsx
import { useState } from "react";

function Counter() {
  const [count, setCount] = useState(0);

  const increase = () => setCount(count + 1);

  return (
    <div>
      <p>Count: {count}</p>
      <button onClick={increase}>Increase</button>
    </div>
  );
}
```

### What happens:

* `useState(0)` initializes `count` to 0
* When the button is clicked, `setCount` updates the value
* React **re-renders** the component with the new value

---

## ðŸ”„ Updating State

Always use the updater function:

```js
setCount(prevCount => prevCount + 1);
```

> This is safer when updates depend on the **previous value**.

---

## ðŸ§° Common `useState` Uses:

* Form inputs (`name`, `email`, etc.)
* Toggle values (`isVisible`, `isDarkMode`)
* Arrays/lists (`items`, `blogs`)
* Complex objects (`user`, `settings`)

---
